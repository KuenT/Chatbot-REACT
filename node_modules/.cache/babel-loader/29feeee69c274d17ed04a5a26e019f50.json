{"ast":null,"code":"var _jsxFileName = \"/Users/quentin/Chatbot/src/Components/ChatContent/ChatItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { animateStyle } from \"../../constants\";\nimport Avatar from \"../Avatar/Avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatItem(props) {\n  _s();\n\n  // eslint-disable-next-line no-unused-vars\n  let [time, setTime] = useState(new Date().getTime());\n\n  const getTime = () => {\n    let diff = new Date().getTime() - props.timeStamp.getTime();\n    let secs = diff / 1000;\n    if (secs < 60) return `${Math.round(secs)} seconds ago`;else if (secs < 3600) {\n      const mins = Math.round(secs / 60);\n      return `${mins} minute${mins > 1 ? \"s\" : \"\"} ago`;\n    } else {\n      const hrs = Math.round(secs / 60 / 60);\n      return `${hrs} hours${hrs > 1 ? \"s\" : \"\"} ago`;\n    }\n  };\n\n  setInterval(() => {\n    setTime(new Date().getTime());\n  }, 1000);\n\n  const getBotName = type => {\n    switch (type) {\n      case \"bot1\":\n        return \"Ghost\";\n\n      case \"bot2\":\n        return \"Transformer\";\n\n      case \"bot3\":\n        return \"Holly\";\n\n      default:\n        return \"Me\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat__item ${props.type ? props.type : \"\"} ${animateStyle( // \"bounce\"\n    // \"wobble\"\n    // \"pulse\"\n    \"rubberBand\")} animate__delay-0.5s`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__item__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__name\",\n        children: getBotName(props.type)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__msg\",\n        children: props.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__meta\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: getTime()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-avatar-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: props.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatItem, \"EBmLZi4SUTHzIx19jpmMh34vTJs=\");\n\n_c = ChatItem;\nexport default ChatItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatItem\");","map":{"version":3,"sources":["/Users/quentin/Chatbot/src/Components/ChatContent/ChatItem.jsx"],"names":["React","useState","animateStyle","Avatar","ChatItem","props","time","setTime","Date","getTime","diff","timeStamp","secs","Math","round","mins","hrs","setInterval","getBotName","type","msg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB;AACA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAIO,IAAJ,GAAWC,OAAX,EAAD,CAA9B;;AACA,QAAMA,OAAO,GAAG,MAAM;AACpB,QAAIC,IAAI,GAAG,IAAIF,IAAJ,GAAWC,OAAX,KAAuBJ,KAAK,CAACM,SAAN,CAAgBF,OAAhB,EAAlC;AACA,QAAIG,IAAI,GAAGF,IAAI,GAAG,IAAlB;AACA,QAAIE,IAAI,GAAG,EAAX,EAAe,OAAQ,GAAEC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAiB,cAA3B,CAAf,KACK,IAAIA,IAAI,GAAG,IAAX,EAAiB;AACpB,YAAMG,IAAI,GAAGF,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,EAAlB,CAAb;AACA,aAAQ,GAAEG,IAAK,UAASA,IAAI,GAAG,CAAP,GAAW,GAAX,GAAiB,EAAG,MAA5C;AACD,KAHI,MAGE;AACL,YAAMC,GAAG,GAAGH,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,EAAP,GAAY,EAAvB,CAAZ;AACA,aAAQ,GAAEI,GAAI,SAAQA,GAAG,GAAG,CAAN,GAAU,GAAV,GAAgB,EAAG,MAAzC;AACD;AACF,GAXD;;AAaAC,EAAAA,WAAW,CAAC,MAAM;AAChBV,IAAAA,OAAO,CAAC,IAAIC,IAAJ,GAAWC,OAAX,EAAD,CAAP;AACD,GAFU,EAER,IAFQ,CAAX;;AAIA,QAAMS,UAAU,GAAIC,IAAD,IAAU;AAC3B,YAAOA,IAAP;AACE,WAAK,MAAL;AACE,eAAO,OAAP;;AACF,WAAK,MAAL;AACE,eAAO,aAAP;;AACF,WAAK,MAAL;AACE,eAAO,OAAP;;AACF;AACE,eAAO,IAAP;AARJ;AAUD,GAXD;;AAaA,sBACE;AACE,IAAA,SAAS,EAAG,cAAad,KAAK,CAACc,IAAN,GAAad,KAAK,CAACc,IAAnB,GAA0B,EAAG,IAAGjB,YAAY,EACnE;AACA;AACA;AACA,gBAJmE,CAKnE,sBANJ;AAAA,4BAQE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBAA8BgB,UAAU,CAACb,KAAK,CAACc,IAAP;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBAA4Bd,KAAK,CAACe;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAA,oBAAOX,OAAO;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAeE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEJ,KAAK,CAACc;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAtDQf,Q;;KAAAA,Q;AAwDT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { animateStyle } from \"../../constants\";\nimport Avatar from \"../Avatar/Avatar\";\n\nfunction ChatItem(props) {\n  // eslint-disable-next-line no-unused-vars\n  let [time, setTime] = useState(new Date().getTime());\n  const getTime = () => {\n    let diff = new Date().getTime() - props.timeStamp.getTime();\n    let secs = diff / 1000;\n    if (secs < 60) return `${Math.round(secs)} seconds ago`;\n    else if (secs < 3600) {\n      const mins = Math.round(secs / 60);\n      return `${mins} minute${mins > 1 ? \"s\" : \"\"} ago`;\n    } else {\n      const hrs = Math.round(secs / 60 / 60);\n      return `${hrs} hours${hrs > 1 ? \"s\" : \"\"} ago`;\n    }\n  };\n\n  setInterval(() => {\n    setTime(new Date().getTime());\n  }, 1000);\n\n  const getBotName = (type) => {\n    switch(type) {\n      case \"bot1\":\n        return \"Ghost\"\n      case \"bot2\":\n        return \"Transformer\"\n      case \"bot3\":\n        return \"Holly\"\n      default:\n        return \"Me\"\n    }\n  }\n\n  return (\n    <div\n      className={`chat__item ${props.type ? props.type : \"\"} ${animateStyle(\n        // \"bounce\"\n        // \"wobble\"\n        // \"pulse\"\n        \"rubberBand\"\n      )} animate__delay-0.5s`}\n    >\n      <div className=\"chat__item__content\">\n        <div className=\"chat__name\">{ getBotName(props.type)}</div>\n        <div className=\"chat__msg\">{props.msg}</div>\n        <div className=\"chat__meta\">\n          <span>{getTime()}</span>\n        </div>\n      </div>\n      <div className=\"chat-avatar-wrapper\">\n        <Avatar src={props.type} />\n      </div>\n    </div>\n  );\n}\n\nexport default ChatItem;\n"]},"metadata":{},"sourceType":"module"}