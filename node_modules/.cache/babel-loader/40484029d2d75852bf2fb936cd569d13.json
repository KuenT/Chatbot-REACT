{"ast":null,"code":"import axios from 'axios';\nimport { END_POINTS } from '../constantURL'; // Get weather API\n\nexport const getCovidData = async () => {\n  const URL = `${END_POINTS.GET_COVID_DATA}`;\n  const response = await axios.get(URL);\n  let data = response.data;\n\n  if (!data) {\n    return \"Some issue in fetching data! Please try again later.\";\n  }\n\n  console.log(data);\n  const global = { ...data.Global\n  };\n  const report = `New Confirmed: ${global.NewConfirmed}, New Deaths: ${global.NewDeaths}, New Recovered: ${global.NewRecovered}, Total Confirmed: ${global.TotalConfirmed}: TotalRecovered: ${global.TotalRecovered}`;\n  return report;\n};\n/**\r\n * \r\n * @param {Country code} country \r\n * @param {Number of headlines} numberOfHeadlines \r\n * @returns \r\n */\n\nexport const getNews = async (country = 'fr', numberOfHeadlines) => {\n  const apiKey = '32f29fe1a6f24548b39acb37fa51c420';\n  const URL = `${END_POINTS.GET_NEWS}?country=${country}&apiKey=${apiKey}`;\n  const response = await axios.get(URL);\n  const data = response.data;\n  let articles = data.articles; // Keeping the required only\n\n  articles.length = numberOfHeadlines;\n  const headlines = articles.map((article, i) => `  (${i + 1}.) ${article.title}  `);\n  return headlines;\n}; //Get a list of countries\n\nexport const getCountries = async (country = 'fr', year = '2020') => {\n  const apiKey = '957580a1-b1d1-4410-b7ec-b5642047e967';\n  const URL = `${END_POINTS.GET_COUNTRIES}?pretty&key=${apiKey}&country=${country}&year=${year}`;\n  const response = await axios.get(URL);\n  let data = response.data;\n};","map":{"version":3,"sources":["/Users/quentin/Chatbot/src/Services/Bot/botAPI.js"],"names":["axios","END_POINTS","getCovidData","URL","GET_COVID_DATA","response","get","data","console","log","global","Global","report","NewConfirmed","NewDeaths","NewRecovered","TotalConfirmed","TotalRecovered","getNews","country","numberOfHeadlines","apiKey","GET_NEWS","articles","length","headlines","map","article","i","title","getCountries","year","GET_COUNTRIES"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,gBAA3B,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,YAAY;AACtC,QAAMC,GAAG,GAAI,GAAEF,UAAU,CAACG,cAAe,EAAzC;AACA,QAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUH,GAAV,CAAvB;AACA,MAAII,IAAI,GAAGF,QAAQ,CAACE,IAApB;;AACA,MAAI,CAACA,IAAL,EAAW;AACT,WAAO,sDAAP;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMG,MAAM,GAAG,EAAE,GAAGH,IAAI,CAACI;AAAV,GAAf;AACA,QAAMC,MAAM,GAAI,kBAAiBF,MAAM,CAACG,YAAa,iBAAgBH,MAAM,CAACI,SAAU,oBAAmBJ,MAAM,CAACK,YAAa,sBAAqBL,MAAM,CAACM,cAAe,qBAAoBN,MAAM,CAACO,cAAe,EAAlN;AACA,SAAOL,MAAP;AACD,CAXM;AAaP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMM,OAAO,GAAG,OAAOC,OAAO,GAAG,IAAjB,EAAuBC,iBAAvB,KAA6C;AAClE,QAAMC,MAAM,GAAG,kCAAf;AACA,QAAMlB,GAAG,GAAI,GAAEF,UAAU,CAACqB,QAAS,YAAWH,OAAQ,WAAUE,MAAO,EAAvE;AACA,QAAMhB,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUH,GAAV,CAAvB;AACA,QAAMI,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AACA,MAAIgB,QAAQ,GAAGhB,IAAI,CAACgB,QAApB,CALkE,CAMlE;;AACAA,EAAAA,QAAQ,CAACC,MAAT,GAAkBJ,iBAAlB;AACA,QAAMK,SAAS,GAAGF,QAAQ,CAACG,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KAAkB,MAAKA,CAAC,GAAG,CAAE,MAAKD,OAAO,CAACE,KAAM,IAA7D,CAAlB;AACA,SAAOJ,SAAP;AACD,CAVM,C,CAYP;;AACA,OAAO,MAAMK,YAAY,GAAG,OAAOX,OAAO,GAAG,IAAjB,EAAuBY,IAAI,GAAG,MAA9B,KAAyC;AACnE,QAAMV,MAAM,GAAG,sCAAf;AACA,QAAMlB,GAAG,GAAI,GAAEF,UAAU,CAAC+B,aAAc,eAAcX,MAAO,YAAWF,OAAQ,SAAQY,IAAK,EAA7F;AACA,QAAM1B,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUH,GAAV,CAAvB;AACA,MAAII,IAAI,GAAGF,QAAQ,CAACE,IAApB;AAGD,CAPM","sourcesContent":["import axios from 'axios';\r\nimport { END_POINTS } from '../constantURL';\r\n\r\n// Get weather API\r\nexport const getCovidData = async () => {\r\n  const URL = `${END_POINTS.GET_COVID_DATA}`;\r\n  const response = await axios.get(URL);\r\n  let data = response.data;\r\n  if (!data) {\r\n    return \"Some issue in fetching data! Please try again later.\";\r\n  }\r\n  console.log(data);\r\n  const global = { ...data.Global };\r\n  const report = `New Confirmed: ${global.NewConfirmed}, New Deaths: ${global.NewDeaths}, New Recovered: ${global.NewRecovered}, Total Confirmed: ${global.TotalConfirmed}: TotalRecovered: ${global.TotalRecovered}`;\r\n  return report;\r\n};\r\n\r\n/**\r\n * \r\n * @param {Country code} country \r\n * @param {Number of headlines} numberOfHeadlines \r\n * @returns \r\n */\r\nexport const getNews = async (country = 'fr', numberOfHeadlines) => {\r\n  const apiKey = '32f29fe1a6f24548b39acb37fa51c420';\r\n  const URL = `${END_POINTS.GET_NEWS}?country=${country}&apiKey=${apiKey}`;\r\n  const response = await axios.get(URL);\r\n  const data = response.data;\r\n  let articles = data.articles;\r\n  // Keeping the required only\r\n  articles.length = numberOfHeadlines;\r\n  const headlines = articles.map((article, i) => (`  (${i + 1}.) ${article.title}  `));\r\n  return headlines;\r\n};\r\n\r\n//Get a list of countries\r\nexport const getCountries = async (country = 'fr', year = '2020') => {\r\n  const apiKey = '957580a1-b1d1-4410-b7ec-b5642047e967';\r\n  const URL = `${END_POINTS.GET_COUNTRIES}?pretty&key=${apiKey}&country=${country}&year=${year}`;\r\n  const response = await axios.get(URL);\r\n  let data = response.data;\r\n  \r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}